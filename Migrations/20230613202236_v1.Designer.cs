// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace EventBoxApi.Migrations
{
    [DbContext(typeof(EventBoxContext))]
    [Migration("20230613202236_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email_adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Korisnicko_ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DrugiKorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PrviKorisnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Broj_Mozda")
                        .HasColumnType("int");

                    b.Property<int>("Broj_Nezainteresovanih")
                        .HasColumnType("int");

                    b.Property<int>("Broj_Zainteresovanih")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum_Dogadjaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_Objave")
                        .HasColumnType("datetime2");

                    b.Property<string>("DogadjajImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Kreatora")
                        .HasColumnType("int");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KreatorIdId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaKorisnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName_Kreatora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vreme_pocetka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KreatorIdId");

                    b.ToTable("Dogadjaj");
                });

            modelBuilder.Entity("Models.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dogadjaj_IdId")
                        .HasColumnType("int");

                    b.Property<string>("SlikaKorisnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username_Korisnika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dogadjaj_IdId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Blokiran")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum_rodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email_Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Korisnicko_Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnikImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka_Hashirana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Validnost")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Notifikacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Korisnik_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Poruka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Korisnik_IdId");

                    b.ToTable("Notifikacija");
                });

            modelBuilder.Entity("Models.Poruka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Chat_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Pisac_Poruke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Chat_IdId");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("Models.Prijavljeni_dogadjaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Broj_prijava")
                        .HasColumnType("int");

                    b.Property<int>("Dogadjaj_IdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Dogadjaj_IdId");

                    b.ToTable("Prijavljeni_dogadjaj");
                });

            modelBuilder.Entity("Models.Razlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prijavljeni_dogadjaj_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Razlog_prijave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Prijavljeni_dogadjaj_IdId");

                    b.ToTable("Razlog");
                });

            modelBuilder.Entity("Models.Reakcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dogadjaj_IDId")
                        .HasColumnType("int");

                    b.Property<int>("Korisnik_ID")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dogadjaj_IDId");

                    b.ToTable("Reakcija");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.HasOne("Models.Korisnik", "KreatorId")
                        .WithMany("Kreirani_Dogadjaji")
                        .HasForeignKey("KreatorIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KreatorId");
                });

            modelBuilder.Entity("Models.Komentar", b =>
                {
                    b.HasOne("Models.Dogadjaj", "Dogadjaj_Id")
                        .WithMany("Lista_Komentara")
                        .HasForeignKey("Dogadjaj_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj_Id");
                });

            modelBuilder.Entity("Models.Notifikacija", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik_Id")
                        .WithMany("Lista_Notifikacija")
                        .HasForeignKey("Korisnik_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik_Id");
                });

            modelBuilder.Entity("Models.Poruka", b =>
                {
                    b.HasOne("Models.Chat", "Chat_Id")
                        .WithMany("Lista_Poruka")
                        .HasForeignKey("Chat_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat_Id");
                });

            modelBuilder.Entity("Models.Prijavljeni_dogadjaj", b =>
                {
                    b.HasOne("Models.Dogadjaj", "Dogadjaj_Id")
                        .WithMany()
                        .HasForeignKey("Dogadjaj_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj_Id");
                });

            modelBuilder.Entity("Models.Razlog", b =>
                {
                    b.HasOne("Models.Prijavljeni_dogadjaj", "Prijavljeni_dogadjaj_Id")
                        .WithMany("Razlozi")
                        .HasForeignKey("Prijavljeni_dogadjaj_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prijavljeni_dogadjaj_Id");
                });

            modelBuilder.Entity("Models.Reakcija", b =>
                {
                    b.HasOne("Models.Dogadjaj", "Dogadjaj_ID")
                        .WithMany("Lista_Reakcija")
                        .HasForeignKey("Dogadjaj_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj_ID");
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.Navigation("Lista_Poruka");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.Navigation("Lista_Komentara");

                    b.Navigation("Lista_Reakcija");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Navigation("Kreirani_Dogadjaji");

                    b.Navigation("Lista_Notifikacija");
                });

            modelBuilder.Entity("Models.Prijavljeni_dogadjaj", b =>
                {
                    b.Navigation("Razlozi");
                });
#pragma warning restore 612, 618
        }
    }
}
